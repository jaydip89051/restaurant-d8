<?php

/**
 * @file
 * Contains packages.module.
 */

use Drupal\Core\Url;

/**
 * Implements hook_entity_delete().
 */
function packages_entity_delete(Drupal\Core\Entity\EntityInterface $entity) {
  // Check if a user is being deleted.
  if ($entity->getEntityTypeId() == 'user') {
    // Delete the packages for this user.
    \Drupal::service('package.storage')
      ->setUserId($entity->id())
      ->delete();
  }
}

/**
 * Implements hook_theme().
 */
function packages_theme() {
  return [
    'packages_form_packages' => [
      'render element' => 'packages',
    ],
  ];
}

/**
 * Implements hook_toolbar().
 */
function packages_toolbar() {
  // Load the packages service.
  $packages = \Drupal::service('packages');

  // Load the package definitions.
  $definitions = $packages->getPackageDefinitions();

  // Build the toolbar links.
  $items['packages'] = [
    '#type' => 'toolbar_item',
    '#access' => \Drupal::currentUser()->hasPermission('access packages'),
    'tab' => [
      '#type' => 'link',
      '#title' => t('Packages'),
      '#url' => Url::fromRoute('packages.form'),
      '#attributes' => [
        'title' => t('Packages'),
        'class' => ['toolbar-icon', 'toolbar-icon-packages'],
      ],
    ],
    'tray' => [
      '#heading' => t('Packages'),
      'shortcuts' => [
        '#theme' => 'links__toolbar_packages',
        '#links' => [],
        '#attributes' => [
          'class' => ['toolbar-menu toolbar-menu-packages'],
        ],
      ],
      'configure' => [
        '#type' => 'link',
        '#title' => t('Manage packages'),
        '#url' => Url::fromRoute('packages.form'),
        '#options' => ['attributes' => ['class' => ['edit-packages']]],
      ],
    ],
    '#weight' => 200,
    '#attached' => [
      'library' => [
        'packages/packages.toolbar',
      ],
    ],
    '#cache' => [
      'contexts' => [
        'user',
      ],
    ],
  ];

  // Iterate the package states.
  foreach ($packages->getStates() as $package_id => $state) {
    // Check if the package is active.
    if ($state->isActive()) {
      // Check if the package is configurable.
      if ($definitions[$package_id]['configurable']) {
        // Add a link to the toolbar.
        $items['packages']['tray']['shortcuts']['#links'][] = [
          'title' => $definitions[$package_id]['label'],
          'url' => Url::fromRoute('packages.package_settings_form', ['package' => $package_id]),
          'attributes' => [
            'class' => [
              'package-' . $package_id,
            ],
          ],
        ];
      }
    }
  }

  // Sort the packages.
  uasort($items['packages']['tray']['shortcuts']['#links'], ['Drupal\Component\Utility\SortArray', 'sortByTitleElement']);

  return $items;
}

/**
 * Implements hook_help().
 */
function packages_help($route_name, Drupal\Core\Routing\RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the packages module.
    case 'help.page.packages':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Allow packages to be toggled and configured per-user.') . '</p>';
      return $output;
  }
}
